{"ast":null,"code":"var _jsxFileName = \"/Users/mikolajmachalski/Chmury/AWS/radio-player/src/RadioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stations = {\n  Antyradio: 'http://redir.atmcdn.pl/sc/o2/Eurozet/live/antyradio.livx',\n  RMF_FM: 'https://www.rmfon.pl/n/rmf_fm.pls',\n  Radio_ZET: 'https://stream.radiozet.pl/zet.aac'\n};\nconst RadioPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [currentStation, setCurrentStation] = useState(Object.keys(stations)[0]);\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n  const audioRef = useRef(null);\n  const playPromiseRef = useRef(null);\n  useEffect(() => {\n    audioRef.current = new Audio(stations[currentStation]);\n    audioRef.current.volume = volume;\n    const timer = setInterval(() => {\n      setCurrentDateTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  useEffect(() => {\n    if (audioRef.current) {\n      const wasPlaying = isPlaying;\n\n      // Wait for any existing play promise to resolve before changing station\n      if (playPromiseRef.current !== null) {\n        playPromiseRef.current.then(() => {\n          audioRef.current.pause();\n          switchStation(wasPlaying);\n        }).catch(() => {\n          switchStation(wasPlaying);\n        });\n      } else {\n        audioRef.current.pause();\n        switchStation(wasPlaying);\n      }\n    }\n    function switchStation(wasPlaying) {\n      audioRef.current = new Audio(stations[currentStation]);\n      audioRef.current.volume = volume;\n      if (wasPlaying) {\n        playAudio();\n      }\n    }\n  }, [currentStation, volume, isPlaying]);\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      // Wait for play promise to resolve before pausing\n      if (playPromiseRef.current !== null) {\n        playPromiseRef.current.then(() => {\n          audioRef.current.pause();\n          setIsPlaying(false);\n        }).catch(() => {\n          setIsPlaying(false);\n        });\n        playPromiseRef.current = null;\n      } else {\n        audioRef.current.pause();\n        setIsPlaying(false);\n      }\n    } else {\n      playAudio();\n    }\n  };\n  const playAudio = () => {\n    if (audioRef.current) {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromiseRef.current = playPromise;\n        playPromise.then(() => {\n          // Playback started successfully\n          setIsPlaying(true);\n          playPromiseRef.current = null;\n        }).catch(error => {\n          // Playback failed\n          console.warn('Playback failed:', error);\n          setIsPlaying(false);\n          playPromiseRef.current = null;\n        });\n      }\n    }\n  };\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"radio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Odtwarzacz Radiowy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: currentStation,\n      onChange: e => setCurrentStation(e.target.value),\n      children: Object.keys(stations).map(station => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: station,\n        children: station\n      }, station, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlayPause,\n      children: isPlaying ? 'Pauza' : 'OdtwÃ³rz'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"G\\u0142o\\u015Bno\\u015B\\u0107: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: volume,\n        onChange: handleVolumeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-time\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data: \", currentDateTime.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Godzina: \", currentDateTime.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(RadioPlayer, \"pVLkTovi9dpaYv+kaaxQ0GLmMMM=\");\n_c = RadioPlayer;\nexport default RadioPlayer;\nvar _c;\n$RefreshReg$(_c, \"RadioPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","stations","Antyradio","RMF_FM","Radio_ZET","RadioPlayer","_s","isPlaying","setIsPlaying","volume","setVolume","currentStation","setCurrentStation","Object","keys","currentDateTime","setCurrentDateTime","Date","audioRef","playPromiseRef","current","Audio","timer","setInterval","clearInterval","wasPlaying","then","pause","switchStation","catch","playAudio","togglePlayPause","playPromise","play","undefined","error","console","warn","handleVolumeChange","e","newVolume","parseFloat","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","station","onClick","type","min","max","step","toLocaleDateString","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/mikolajmachalski/Chmury/AWS/radio-player/src/RadioPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst stations = {\n  Antyradio: 'http://redir.atmcdn.pl/sc/o2/Eurozet/live/antyradio.livx',\n  RMF_FM: 'https://www.rmfon.pl/n/rmf_fm.pls',\n  Radio_ZET: 'https://stream.radiozet.pl/zet.aac'\n};\n\nconst RadioPlayer = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [currentStation, setCurrentStation] = useState(Object.keys(stations)[0]);\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n  const audioRef = useRef(null);\n  const playPromiseRef = useRef(null);\n\n  useEffect(() => {\n    audioRef.current = new Audio(stations[currentStation]);\n    audioRef.current.volume = volume;\n    \n    const timer = setInterval(() => {\n      setCurrentDateTime(new Date());\n    }, 1000);\n    \n    return () => clearInterval(timer);\n  }, []);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      const wasPlaying = isPlaying;\n      \n      // Wait for any existing play promise to resolve before changing station\n      if (playPromiseRef.current !== null) {\n        playPromiseRef.current.then(() => {\n          audioRef.current.pause();\n          switchStation(wasPlaying);\n        }).catch(() => {\n          switchStation(wasPlaying);\n        });\n      } else {\n        audioRef.current.pause();\n        switchStation(wasPlaying);\n      }\n    }\n    \n    function switchStation(wasPlaying) {\n      audioRef.current = new Audio(stations[currentStation]);\n      audioRef.current.volume = volume;\n      \n      if (wasPlaying) {\n        playAudio();\n      }\n    }\n  }, [currentStation, volume, isPlaying]);\n\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      // Wait for play promise to resolve before pausing\n      if (playPromiseRef.current !== null) {\n        playPromiseRef.current.then(() => {\n          audioRef.current.pause();\n          setIsPlaying(false);\n        }).catch(() => {\n          setIsPlaying(false);\n        });\n        playPromiseRef.current = null;\n      } else {\n        audioRef.current.pause();\n        setIsPlaying(false);\n      }\n    } else {\n      playAudio();\n    }\n  };\n\n  const playAudio = () => {\n    if (audioRef.current) {\n      const playPromise = audioRef.current.play();\n      \n      if (playPromise !== undefined) {\n        playPromiseRef.current = playPromise;\n        \n        playPromise.then(() => {\n          // Playback started successfully\n          setIsPlaying(true);\n          playPromiseRef.current = null;\n        }).catch(error => {\n          // Playback failed\n          console.warn('Playback failed:', error);\n          setIsPlaying(false);\n          playPromiseRef.current = null;\n        });\n      }\n    }\n  };\n\n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n\n  return (\n    <div className=\"radio-player\">\n      <h2>Odtwarzacz Radiowy</h2>\n      <select value={currentStation} onChange={(e) => setCurrentStation(e.target.value)}>\n        {Object.keys(stations).map((station) => (\n          <option key={station} value={station}>\n            {station}\n          </option>\n        ))}\n      </select>\n      <button onClick={togglePlayPause}>\n        {isPlaying ? 'Pauza' : 'OdtwÃ³rz'}\n      </button>\n      <div>\n        <label>GÅoÅnoÅÄ: </label>\n        <input \n          type=\"range\" \n          min=\"0\" \n          max=\"1\" \n          step=\"0.01\" \n          value={volume} \n          onChange={handleVolumeChange} \n        />\n      </div>\n      <div className=\"date-time\">\n        <p>Data: {currentDateTime.toLocaleDateString()}</p>\n        <p>Godzina: {currentDateTime.toLocaleTimeString()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default RadioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}