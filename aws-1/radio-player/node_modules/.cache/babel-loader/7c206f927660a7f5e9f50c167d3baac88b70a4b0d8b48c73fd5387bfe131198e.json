{"ast":null,"code":"var _jsxFileName = \"/Users/mikolajmachalski/Chmury/AWS/radio-player/src/RadioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stations = {\n  Antyradio: 'https://ant-waw-01.cdn.eurozet.pl/ant-waw.mp3',\n  RMF_FM: 'https://rs6-krk2.rmfstream.pl/RMFFM48',\n  Radio_ZET: 'https://radiozetmp3-01.eurozet.pl:8400/',\n  Radio_Maryja: 'https://radiomaryja.fastcast4u.com/proxy/radiomaryja?mp=/1'\n};\nconst RadioPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [currentStation, setCurrentStation] = useState(Object.keys(stations)[0]);\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n  const [isLoading, setIsLoading] = useState(false);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    audioRef.current = new Audio(stations[currentStation]);\n    audioRef.current.volume = volume;\n    const timer = setInterval(() => {\n      setCurrentDateTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const switchStation = async newStation => {\n    setIsLoading(true);\n    const wasPlaying = isPlaying;\n\n    // Stop current audio\n    if (audioRef.current) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    }\n\n    // Create new audio element\n    audioRef.current = new Audio(stations[newStation]);\n    audioRef.current.volume = volume;\n\n    // If was playing, start new station\n    if (wasPlaying) {\n      try {\n        await audioRef.current.play();\n        setIsPlaying(true);\n      } catch (error) {\n        console.warn('Failed to play new station:', error);\n        setIsPlaying(false);\n      }\n    }\n    setIsLoading(false);\n  };\n  const handleStationChange = e => {\n    const newStation = e.target.value;\n    setCurrentStation(newStation);\n    switchStation(newStation);\n  };\n  const togglePlayPause = async () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    } else {\n      try {\n        await audioRef.current.play();\n        setIsPlaying(true);\n      } catch (error) {\n        console.warn('Playback failed:', error);\n        setIsPlaying(false);\n      }\n    }\n  };\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"radio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Odtwarzacz Radiowy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: currentStation,\n      onChange: handleStationChange,\n      disabled: isLoading,\n      children: Object.keys(stations).map(station => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: station,\n        children: station\n      }, station, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlayPause,\n      disabled: isLoading,\n      style: {\n        backgroundColor: isLoading ? '#ff4444' : '#4CAF50',\n        opacity: isLoading ? 0.7 : 1\n      },\n      children: isLoading ? 'Ładowanie...' : isPlaying ? 'Pauza' : 'Odtwórz'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"G\\u0142o\\u015Bno\\u015B\\u0107: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.01\",\n        value: volume,\n        onChange: handleVolumeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-time\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data: \", currentDateTime.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Godzina: \", currentDateTime.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n};\n_s(RadioPlayer, \"gLC0fBtOpYUPIm7AOSmIaK89MXk=\");\n_c = RadioPlayer;\nexport default RadioPlayer;\nvar _c;\n$RefreshReg$(_c, \"RadioPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","stations","Antyradio","RMF_FM","Radio_ZET","Radio_Maryja","RadioPlayer","_s","isPlaying","setIsPlaying","volume","setVolume","currentStation","setCurrentStation","Object","keys","currentDateTime","setCurrentDateTime","Date","isLoading","setIsLoading","audioRef","current","Audio","timer","setInterval","clearInterval","switchStation","newStation","wasPlaying","pause","play","error","console","warn","handleStationChange","e","target","value","togglePlayPause","handleVolumeChange","newVolume","parseFloat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","map","station","onClick","style","backgroundColor","opacity","type","min","max","step","toLocaleDateString","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/mikolajmachalski/Chmury/AWS/radio-player/src/RadioPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nconst stations = {\n    Antyradio: 'https://ant-waw-01.cdn.eurozet.pl/ant-waw.mp3',\n    RMF_FM: 'https://rs6-krk2.rmfstream.pl/RMFFM48',\n    Radio_ZET: 'https://radiozetmp3-01.eurozet.pl:8400/',\n    Radio_Maryja: 'https://radiomaryja.fastcast4u.com/proxy/radiomaryja?mp=/1'\n  };\n\n  \n  const RadioPlayer = () => {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [volume, setVolume] = useState(1);\n    const [currentStation, setCurrentStation] = useState(Object.keys(stations)[0]);\n    const [currentDateTime, setCurrentDateTime] = useState(new Date());\n    const [isLoading, setIsLoading] = useState(false);\n    const audioRef = useRef(null);\n  \n    useEffect(() => {\n      audioRef.current = new Audio(stations[currentStation]);\n      audioRef.current.volume = volume;\n      \n      const timer = setInterval(() => {\n        setCurrentDateTime(new Date());\n      }, 1000);\n      \n      return () => clearInterval(timer);\n    }, []);\n  \n    const switchStation = async (newStation) => {\n      setIsLoading(true);\n      const wasPlaying = isPlaying;\n      \n      // Stop current audio\n      if (audioRef.current) {\n        audioRef.current.pause();\n        setIsPlaying(false);\n      }\n      \n      // Create new audio element\n      audioRef.current = new Audio(stations[newStation]);\n      audioRef.current.volume = volume;\n      \n      // If was playing, start new station\n      if (wasPlaying) {\n        try {\n          await audioRef.current.play();\n          setIsPlaying(true);\n        } catch (error) {\n          console.warn('Failed to play new station:', error);\n          setIsPlaying(false);\n        }\n      }\n      \n      setIsLoading(false);\n    };\n  \n    const handleStationChange = (e) => {\n      const newStation = e.target.value;\n      setCurrentStation(newStation);\n      switchStation(newStation);\n    };\n  \n    const togglePlayPause = async () => {\n      if (isPlaying) {\n        audioRef.current.pause();\n        setIsPlaying(false);\n      } else {\n        try {\n          await audioRef.current.play();\n          setIsPlaying(true);\n        } catch (error) {\n          console.warn('Playback failed:', error);\n          setIsPlaying(false);\n        }\n      }\n    };\n  \n\n  \n    const handleVolumeChange = (e) => {\n      const newVolume = parseFloat(e.target.value);\n      setVolume(newVolume);\n      if (audioRef.current) {\n        audioRef.current.volume = newVolume;\n      }\n    };\n  \n    return (\n      <div className=\"radio-player\">\n        <h2>Odtwarzacz Radiowy</h2>\n        <select value={currentStation} onChange={handleStationChange} disabled={isLoading}>\n          {Object.keys(stations).map((station) => (\n            <option key={station} value={station}>\n              {station}\n            </option>\n          ))}\n        </select>\n        <button \n          onClick={togglePlayPause}\n          disabled={isLoading}\n          style={{\n            backgroundColor: isLoading ? '#ff4444' : '#4CAF50',\n            opacity: isLoading ? 0.7 : 1\n          }}\n        >\n          {isLoading ? 'Ładowanie...' : (isPlaying ? 'Pauza' : 'Odtwórz')}\n        </button>\n        <div>\n          <label>Głośność: </label>\n          <input \n            type=\"range\" \n            min=\"0\" \n            max=\"1\" \n            step=\"0.01\" \n            value={volume} \n            onChange={handleVolumeChange} \n          />\n        </div>\n        <div className=\"date-time\">\n          <p>Data: {currentDateTime.toLocaleDateString()}</p>\n          <p>Godzina: {currentDateTime.toLocaleTimeString()}</p>\n        </div>\n      </div>\n    );\n  };\n  \n  export default RadioPlayer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}